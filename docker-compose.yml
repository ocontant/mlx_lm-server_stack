services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    command:
      - "--providers.file.directory=/etc/traefik/config"
      - "--providers.file.watch=true"
      # Dashboard
      - "--api.insecure=true"
      # Docker provider
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      # Certificates resolver
      - "--certificatesresolvers.selfsigned.acme.caserver=internal"
      - "--certificatesresolvers.selfsigned.acme.storage=/etc/traefik/certificates/acme.json"
      - "--certificatesresolvers.selfsigned.acme.keytype=EC256" 
      # Entrypoints configuration
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # Metrics and tracing
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      # - "--tracing.enabled=true"
      # Health checks
      # - "--ping=true"
      # - "--ping.entrypoint=web"
      # - "--ping.path=/health"
      # - "--ping.timeout=5s"
      # - "--ping.interval=30s"
      # - "--ping.startPeriod=40s"
      # - "--ping.headers.X-Request-ID=keep"
      # - "--ping.headers.X-Real-IP=keep"
      # - "--ping.headers.X-Forwarded-For=keep"
      # - "--ping.headers.X-Forwarded-Proto=keep"
      # - "--ping.headers.X-Forwarded-Host=keep"
      # - "--ping.headers.X-Forwarded-Port=keep"
      # Logging
      - "--accesslog=true"
      - "--log.level=DEBUG"
      - "--log.format=json"
      - "--accesslog.format=json"
      - "--accesslog.fields.headers.names.X-Request-ID=keep"
      - "--accesslog.fields.headers.names.X-Real-IP=keep"
      - "--providers.docker.watch=true"
      - "--providers.docker.network=litellm-public"     
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "traefik-logs"
        env: "os,customer"
        tag: "{{.Name}}/{{.ID}}"
    ports:
      - "80:80"
      - "443:443"
      - "${TRAEFIK_DASHBOARD_PORT:-8080}:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/config:/etc/traefik/config
      - ./traefik/certificates:/etc/traefik/certificates:ro
      - ${LETSENCRYPT_DATA_DIR:-./traefik/certificates/letsencrypt}:/etc/traefik/certificates/letsencrypt
    networks:
      - litellm-public
    labels:
      - "traefik.enable=true"
      # Dashboard
      - "traefik.http.routers.traefik-dashboard.rule=Host(`${TRAEFIK_HOSTNAME:-traefik.localhost.loc}`)"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.entrypoints=web"
      # Metrics endpoint
      - "traefik.http.routers.traefik-metrics.rule=Host(`${TRAEFIK_HOSTNAME:-traefik.localhost.loc}`) && PathPrefix(`/metrics`)"
      - "traefik.http.routers.traefik-metrics.service=prometheus@internal"
      - "traefik.http.routers.traefik-metrics.entrypoints=web"
      # Health checks
      - "traefik.http.routers.traefik-health.rule=Host(`${TRAEFIK_HOSTNAME:-traefik.localhost.loc}`) && PathPrefix(`/health`)"
      - "traefik.http.routers.traefik-health.service=ping@internal"
      - "traefik.http.routers.traefik-health.entrypoints=web"
      # Traces
      - "traefik.http.routers.traefik-traces.rule=Host(`${TRAEFIK_HOSTNAME:-traefik.localhost.loc}`) && PathPrefix(`/traces`)"
      - "traefik.http.routers.traefik-traces.entrypoints=web"

  litellm:
    image: ghcr.io/berriai/litellm:main-latest
    container_name: litellm
    restart: unless-stopped
    volumes:
      - ./litellm/config.yaml:/app/config.yaml
    command:
      - "--config=/app/config.yaml"
      - "--port=4000"
    environment:
      - LITELLM_PORT=4000
      - LITELLM_HTTP_HOSTNAME=${LITELLM_HTTP_HOSTNAME:-litellm.localhost.loc}
      - LITELLM_HTTP_PORT=${LITELLM_HTTP_PORT:-4000}
      - LITELLM_HTTP_URL=${LITELLM_HTTP_URL:-http://litellm.localhost.loc:4000}
      - HOST=0.0.0.0
      - CONFIG_PATH=/litellm/config.yaml
      - LOG_LEVEL=DEBUG  # Add explicit log level
      - DEBUG=1  # Enable debug mode
    networks:
      - litellm-public
    ports:
      - "4000:4000" # HTTP port (fixed: added port mapping)
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "litellm-logs"
        env: "os,customer"
        tag: "{{.Name}}/{{.ID}}"
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:4000/health/liveliness"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s
    labels:
      - "traefik.enable=true"
      # HTTP endpoint
      - "traefik.http.routers.litellm-http.rule=Host(`litellm.localhost.loc`)"
      - "traefik.http.routers.litellm-http.entrypoints=web"
      - "traefik.http.services.litellm.loadbalancer.server.port=4000"
      - "traefik.http.routers.litellm-http.service=litellm"
      # Anthropic HTTP endpoint
      - "traefik.http.routers.anthropic-http.rule=Host(`api.anthropic.com`)"
      - "traefik.http.routers.anthropic-http.entrypoints=web"
      - "traefik.http.routers.anthropic-http.service=litellm"
      # HTTPS endpoint with TLS offloading
      - "traefik.http.routers.litellm-https.rule=Host(`litellm.localhost.loc`)" 
      - "traefik.http.routers.litellm-https.entrypoints=websecure"
      - "traefik.http.routers.litellm-https.service=litellm"
      - "traefik.http.routers.litellm-https.tls=true"
      - "traefik.http.routers.litellm-https.tls.certresolver=selfsigned"
      # Anthropic HTTPS endpoint
      - "traefik.http.routers.anthropic-https.rule=Host(`api.anthropic.com`)"
      - "traefik.http.routers.anthropic-https.entrypoints=websecure"
      - "traefik.http.routers.anthropic-https.service=litellm"
      - "traefik.http.routers.anthropic-https.tls=true"
      # - "traefik.http.routers.anthropic-https.tls.certresolver=selfsigned"
      # Common middleware
      - "traefik.http.middlewares.litellm-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      # - "traefik.http.routers.litellm-http.middlewares=secureHeaders@file,cors@file"
      # - "traefik.http.routers.litellm-https.middlewares=secureHeaders@file,cors@file"

networks:
  litellm-public:
    name: litellm-public

# Add logging configuration for docker-compose
x-logging: &default-logging
  options:
    max-size: "10m"
    max-file: "3"
    labels: "docker-compose-logs"